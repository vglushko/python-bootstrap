[tool.poetry]
name = "python-bootstrap"
version = "0.0.1"
description = "Python bootstrap project containing development tools (poetry, black, flake8, mypy, make) configured for use"
authors = ["Vitaliy Glushko"]
license = "MIT"
readme = "README.md"
packages = [{include = "python_bootstrap"}]

[tool.poetry.dependencies]
python = "^3.10"


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
flake8 = "^6.0.0"
flake8-bugbear = "^22.12.6"
flake8-comprehensions = "^3.10.1"
flake8-return = "^1.2.0"
flake8-quotes = "^3.3.2"
flake8-simplify = "^0.19.3"
pep8-naming = "^0.13.3"
flake8-docstrings = "^1.6.0"
mypy = "^0.991"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119

[tool.isort]
profile = "black"

[tool.mypy]
# Python version used to parse and check the target platform.
python_version = "3.10"
# Run mypy for all *.py files. 
# You may want to change it to run for the selected packages (then specify the packages in the Makefile)
files = "**/*.py"
# Enables all optional error checking flags
strict = "true"
# Produces a warning when returning a value with type Any from a function declared with a non-Any return type.
# The issue is that combining a typed variable with Any variable produces Any.
warn_return_any = "false"
# Use visually nicer output in error messages.
pretty = "true"
# A comma-separated list of mypy plugins. It is used to add types for 3rd party libraries.
# plugins = ""